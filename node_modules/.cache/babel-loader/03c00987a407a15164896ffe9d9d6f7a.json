{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriy/Desktop/test_project/src/components/IndividualChangeProducts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { firestore, storage } from '../index';\nimport { Products } from './Products';\nimport ChangeCart from './ChangeCart';\nimport { data } from './ChangeCart';\nimport firebase from 'firebase';\nimport { useState } from 'react';\nimport { InputGroup } from 'react-bootstrap';\nimport { FormControl } from 'react-bootstrap';\nimport { title } from 'process';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const IndividualChangeProduct = ({\n  individualChangeProduct\n}) => {\n  _s();\n\n  const [image, setImage] = useState(null);\n  const [imageError, setImageError] = useState('');\n  const types = ['image/jpg', 'image/jpeg', 'image/png', 'image/PNG'];\n\n  const handleProductImg = e => {\n    let selectedFile = e.target.files[0];\n\n    if (selectedFile) {\n      if (selectedFile && types.includes(selectedFile.type)) {\n        setImage(selectedFile);\n        setImageError('');\n      }\n    }\n  };\n\n  const handleAddProducts = e => {\n    e.preventDefault();\n    const uploadTask = storage.ref(`product-images/${image.name}`).put(image);\n    uploadTask.on('state_changed', snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      console.log(progress);\n    }, error => setUploadError(error.message), () => {\n      storage.ref('product-images').child(image.name).getDownloadURL().then(url => {\n        firestore.collection('Products').add({\n          url\n        }).then(() => {\n          setSuccessMsg('Товар добавлен');\n          document.getElementById('file').value = '';\n          setImageError('');\n          setUploadError('');\n          setTimeout(() => {\n            setSuccessMsg('');\n          }, 3000);\n        }).catch(error => setUploadError(error.message));\n      });\n    });\n  };\n\n  const [successMsg, setSuccessMsg] = useState('');\n  const [uploadError, setUploadError] = useState('');\n\n  const funcUpdate = () => {\n    // var myValue = document.getElementById(\"inputGroup-sizing-lg\").value={title};\n    // const inpu= document.getElementById(\"file\").value;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const deletePost = async name => {\n    const snapshot = await firestore.collection('Products').limit(1).where('title', '==', name).get();\n    const doc = snapshot.docs[0];\n    doc.ref.delete();\n    return doc.id;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-img\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: individualChangeProduct.url,\n        alt: \"product-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        className: \"form-control\",\n        required: true,\n        onChange: handleProductImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-text title\",\n      children: individualChangeProduct.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-text description\",\n      children: individualChangeProduct.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-text price\",\n      children: [\"$ \", individualChangeProduct.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-danger btn-md cart-btn\",\n      onClick: () => deletePost(individualChangeProduct.title),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-danger btn-md cart-btn\",\n      type: \"submit\",\n      onClick: () => funcUpdate(),\n      children: \"Change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IndividualChangeProduct, \"RfrJCR/HGBz7KkISgKoBUjdG/2k=\");\n\n_c = IndividualChangeProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndividualChangeProduct\");","map":{"version":3,"sources":["/Users/dmitriy/Desktop/test_project/src/components/IndividualChangeProducts.js"],"names":["React","firestore","storage","Products","ChangeCart","data","firebase","useState","InputGroup","FormControl","title","IndividualChangeProduct","individualChangeProduct","image","setImage","imageError","setImageError","types","handleProductImg","e","selectedFile","target","files","includes","type","handleAddProducts","preventDefault","uploadTask","ref","name","put","on","snapshot","progress","bytesTransferred","totalBytes","console","log","error","setUploadError","message","child","getDownloadURL","then","url","collection","add","setSuccessMsg","document","getElementById","value","setTimeout","catch","successMsg","uploadError","funcUpdate","deletePost","limit","where","get","doc","docs","delete","id","description","price"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { firestore, storage } from '../index'\nimport { Products } from './Products'\nimport ChangeCart from './ChangeCart'\nimport {data} from './ChangeCart'\nimport firebase from 'firebase'\nimport { useState } from 'react'\nimport { InputGroup } from 'react-bootstrap'\nimport { FormControl } from 'react-bootstrap'\nimport { title } from 'process'\n\nexport const IndividualChangeProduct = ({ individualChangeProduct }) => {\n    \n\n\n    const [image, setImage] = useState(null);\n    const [imageError, setImageError] = useState('');\n    \n    const types = ['image/jpg', 'image/jpeg', 'image/png', 'image/PNG'];\n    const handleProductImg = (e) => {\n        let selectedFile = e.target.files[0];\n        if (selectedFile) {\n            if (selectedFile && types.includes(selectedFile.type)) {\n                setImage(selectedFile);\n                setImageError('');\n            }\n            \n        }\n        \n    }\n    const handleAddProducts=(e)=>{\n        e.preventDefault();\n       const uploadTask=storage.ref(`product-images/${image.name}`).put(image);\n       uploadTask.on('state_changed',snapshot=>{\n           const progress=(snapshot.bytesTransferred/snapshot.totalBytes)*100\n           console.log(progress);\n       },error=>setUploadError(error.message),()=>{\n           storage.ref('product-images').child(image.name).getDownloadURL().then(url=>{\n            firestore.collection('Products').add({\n              \n                url\n            }).then(()=>{\n                setSuccessMsg('Товар добавлен');\n               \n                document.getElementById('file').value='';\n                setImageError('');\n                setUploadError('');\n                setTimeout(()=>{\n    setSuccessMsg('');\n                },3000)\n            }).catch(error=>setUploadError(error.message));\n           })\n       })\n    }\n    \n    \n    const [successMsg, setSuccessMsg] = useState('');\n    const [uploadError, setUploadError] = useState('');\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n   const funcUpdate=()=>{\n   // var myValue = document.getElementById(\"inputGroup-sizing-lg\").value={title};\n   // const inpu= document.getElementById(\"file\").value;\n\n\n\n\n       return( <></>\n       )}\n     \nconst deletePost=async(name) =>{\n  const snapshot=  await firestore.collection('Products').limit(1).where('title','==',name).get();\n  \n  const doc=snapshot.docs[0];\n  doc.ref.delete();\n  return doc.id;\n}\n       \n\n\n\n\n\n\n\n    return (\n     \n        <div className='product'>\n         \n            <div className='product-img'>\n                <img src={individualChangeProduct.url} alt=\"product-img\" />\n             \n            </div>\n            <div>\n            <input type='file' id='file' className='form-control' required\n                    onChange={handleProductImg} ></input>\n      \n    </div>\n            <div className='product-text title'>{individualChangeProduct.title}</div>\n         \n            <div className='product-text description'>{individualChangeProduct.description}</div>\n            <div className='product-text price'>$ {individualChangeProduct.price}</div>\n            <div className='btn btn-danger btn-md cart-btn' onClick={()=>deletePost(individualChangeProduct.title)}>Delete</div>\n            <div className='btn btn-danger btn-md cart-btn' type='submit' onClick={()=>funcUpdate()} >Change</div>\n        </div>\n        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}