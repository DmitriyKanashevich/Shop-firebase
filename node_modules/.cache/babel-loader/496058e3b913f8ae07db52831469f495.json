{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriy/Desktop/test_project/src/components/IndividualChangeProducts.js\";\nimport React from 'react';\nimport { firestore, storage } from '../index';\nimport { Products } from './Products';\nimport ChangeCart from './ChangeCart';\nimport { data } from './ChangeCart';\nimport firebase from 'firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const IndividualChangeProduct = ({\n  individualChangeProduct\n}) => {\n  const deletePost = async name => {\n    const snapshot = await firestore.collection('Products').limit(1).where('title', '==', name).get();\n    const doc = snapshot.docs[0];\n    doc.ref.delete();\n    return doc.id;\n  };\n\n  const updatePost = async nameId => {\n    const update = await firestore.collection(\"Products\").doc().update({\n      \"date\": '00001',\n      \"description\": \"Red\"\n    }).then(() => {\n      console.log(\"Document successfully updated!\");\n    });\n  };\n\n  componentDidMounts = () => {\n    const ref = firebase.firestore().collection('fishproducts').doc(this.props.match.params.id);\n    ref.get().then(doc => {\n      if (doc.exists) {\n        this.setState({\n          fishproducts: doc.data(),\n          key: doc.id,\n          isLoading: false\n        });\n      } else {\n        console.log(doc);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-img\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: individualChangeProduct.url,\n        alt: \"product-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-text title\",\n      children: individualChangeProduct.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-text description\",\n      children: individualChangeProduct.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-text price\",\n      children: [\"$ \", individualChangeProduct.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-danger btn-md cart-btn\",\n      onClick: () => deletePost(individualChangeProduct.title),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-danger btn-md cart-btn\",\n      onClick: () => updatePost(individualChangeProduct.title),\n      children: \"Change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_c = IndividualChangeProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndividualChangeProduct\");","map":{"version":3,"sources":["/Users/dmitriy/Desktop/test_project/src/components/IndividualChangeProducts.js"],"names":["React","firestore","storage","Products","ChangeCart","data","firebase","IndividualChangeProduct","individualChangeProduct","deletePost","name","snapshot","collection","limit","where","get","doc","docs","ref","delete","id","updatePost","nameId","update","then","console","log","componentDidMounts","props","match","params","exists","setState","fishproducts","key","isLoading","url","title","description","price"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { firestore, storage } from '../index'\nimport { Products } from './Products'\nimport ChangeCart from './ChangeCart'\nimport {data} from './ChangeCart'\nimport firebase from 'firebase'\n\nexport const IndividualChangeProduct = ({ individualChangeProduct }) => {\n    \n\nconst deletePost=async(name) =>{\n  const snapshot=  await firestore.collection('Products').limit(1).where('title','==',name).get();\n\n  const doc=snapshot.docs[0];\n  doc.ref.delete();\n  return doc.id;\n}\n\n\n\nconst updatePost=async(nameId)=>{\n    \nconst update=await firestore.collection(\"Products\").doc().update({\n    \"date\": '00001',\n    \"description\": \"Red\"\n})\n.then(() => {\n    console.log(\"Document successfully updated!\");\n});\n\n}\ncomponentDidMounts=() =>{\n    const ref = firebase.firestore().collection('fishproducts').doc(this.props.match.params.id);\n    ref.get().then((doc) => {\n         if (doc.exists) {\n              this.setState({\n                   fishproducts: doc.data(),\n                   key: doc.id,\n                   isLoading: false\n              });\n         } else {\n              console.log(doc);\n         }\n    });\n}\n    return (\n     \n        <div className='product'>\n         \n            <div className='product-img'>\n                <img src={individualChangeProduct.url} alt=\"product-img\" />\n             \n            </div>\n      \n            <div className='product-text title'>{individualChangeProduct.title}</div>\n            <div className='product-text description'>{individualChangeProduct.description}</div>\n            <div className='product-text price'>$ {individualChangeProduct.price}</div>\n            <div className='btn btn-danger btn-md cart-btn' onClick={()=>deletePost(individualChangeProduct.title)}>Delete</div>\n            <div className='btn btn-danger btn-md cart-btn' onClick={()=>updatePost(individualChangeProduct.title)} >Change</div>\n        </div>\n        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}