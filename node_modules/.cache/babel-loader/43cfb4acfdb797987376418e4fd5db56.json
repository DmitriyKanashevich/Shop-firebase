{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriy/Desktop/test_project/src/components/IndividualChangeProducts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { firestore, storage } from '../index';\nimport { Products } from './Products';\nimport ChangeCart from './ChangeCart';\nimport { data } from './ChangeCart';\nimport firebase from 'firebase';\nimport { useState } from 'react';\nimport { InputGroup } from 'react-bootstrap';\nimport { FormControl } from 'react-bootstrap';\nimport { title } from 'process';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const IndividualChangeProduct = ({\n  individualChangeProduct\n}) => {\n  _s();\n\n  // const allInputs = {imgUrl: ''};\n  const [imageAsFile, setImageAsFile] = useState('');\n  const [imageAsUrl, setImageAsUrl] = useState({\n    imgUrl: ''\n  });\n  console.log(imageAsFile);\n\n  const handleImageAsFile = e => {\n    const image = e.target.files[0];\n    setImageAsFile(imageFile => image);\n  };\n\n  const handleFireBaseUpload = e => {\n    e.preventDefault();\n    console.log('start of upload'); // async magic goes here...\n\n    if (imageAsFile === '') {\n      console.error(`not an image, the image file is a ${typeof imageAsFile}`);\n    }\n\n    const uploadTask = storage.ref(`/images/${imageAsFile.name}`).put(imageAsFile);\n    uploadTask.on('state_changed', snapShot => {\n      //takes a snap shot of the process as it is happening\n      console.log(snapShot);\n    }, err => {\n      //catches the errors\n      console.log(err);\n    }, () => {\n      // gets the functions from storage refences the image storage in firebase by the children\n      // gets the download url then sets the image from firebase as the value for the imgUrl key:\n      storage.ref('images').child(imageAsFile.name).getDownloadURL().then(fireBaseUrl => {\n        setImageAsUrl(prevObject => ({ ...prevObject,\n          imgUrl: fireBaseUrl\n        }));\n      });\n    });\n  };\n\n  const funcUpdate = () => {\n    // var myValue = document.getElementById(\"inputGroup-sizing-lg\").value={title};\n    // const inpu= document.getElementById(\"file\").value;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const deletePost = async name => {\n    const snapshot = await firestore.collection('Products').limit(1).where('title', '==', name).get();\n    const doc = snapshot.docs[0];\n    doc.ref.delete();\n    return doc.id;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-img\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: individualChangeProduct.url,\n        alt: \"product-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFireBaseUpload,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImageAsFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), \"         \", /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"upload to firebase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 20\n        }, this), \"       \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageAsUrl.imgUrl,\n        alt: \"image tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-text title\",\n      children: individualChangeProduct.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-text description\",\n      children: individualChangeProduct.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-text price\",\n      children: [\"$ \", individualChangeProduct.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-danger btn-md cart-btn\",\n      onClick: () => deletePost(individualChangeProduct.title),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-danger btn-md cart-btn\",\n      type: \"submit\",\n      onClick: () => funcUpdate(),\n      children: \"Change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IndividualChangeProduct, \"A95+RSBmBa3Ybqp4+2gje6lacE8=\");\n\n_c = IndividualChangeProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndividualChangeProduct\");","map":{"version":3,"sources":["/Users/dmitriy/Desktop/test_project/src/components/IndividualChangeProducts.js"],"names":["React","firestore","storage","Products","ChangeCart","data","firebase","useState","InputGroup","FormControl","title","IndividualChangeProduct","individualChangeProduct","imageAsFile","setImageAsFile","imageAsUrl","setImageAsUrl","imgUrl","console","log","handleImageAsFile","e","image","target","files","imageFile","handleFireBaseUpload","preventDefault","error","uploadTask","ref","name","put","on","snapShot","err","child","getDownloadURL","then","fireBaseUrl","prevObject","funcUpdate","deletePost","snapshot","collection","limit","where","get","doc","docs","delete","id","url","description","price"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { firestore, storage } from '../index'\nimport { Products } from './Products'\nimport ChangeCart from './ChangeCart'\nimport {data} from './ChangeCart'\nimport firebase from 'firebase'\nimport { useState } from 'react'\nimport { InputGroup } from 'react-bootstrap'\nimport { FormControl } from 'react-bootstrap'\nimport { title } from 'process'\n\nexport const IndividualChangeProduct = ({ individualChangeProduct }) => {\n    \n   // const allInputs = {imgUrl: ''};\n    const [imageAsFile, setImageAsFile] = useState('')\n    const [imageAsUrl, setImageAsUrl] = useState({imgUrl: ''})\n\n\n    console.log(imageAsFile)\n const handleImageAsFile = (e) => {\n      const image = e.target.files[0]\n      setImageAsFile(imageFile => (image))\n  }\n  const handleFireBaseUpload = e => {\n    e.preventDefault()\n  console.log('start of upload')\n  // async magic goes here...\n  if(imageAsFile === '' ) {\n    console.error(`not an image, the image file is a ${typeof(imageAsFile)}`)\n  }\n  const uploadTask = storage.ref(`/images/${imageAsFile.name}`).put(imageAsFile)\n  uploadTask.on('state_changed', \n  (snapShot) => {\n    //takes a snap shot of the process as it is happening\n    console.log(snapShot)\n  }, (err) => {\n    //catches the errors\n    console.log(err)\n  }, () => {\n    // gets the functions from storage refences the image storage in firebase by the children\n    // gets the download url then sets the image from firebase as the value for the imgUrl key:\n    storage.ref('images').child(imageAsFile.name).getDownloadURL()\n     .then(fireBaseUrl => {\n       setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\n     })\n  })\n\n\n\n\n\n\n  }\n\n\n\n\n\n\n\n\n\n\n\n    \n\n   const funcUpdate=()=>{\n   // var myValue = document.getElementById(\"inputGroup-sizing-lg\").value={title};\n   // const inpu= document.getElementById(\"file\").value;\n\n\n\n\n       return( <></>\n       )}\n     \nconst deletePost=async(name) =>{\n  const snapshot=  await firestore.collection('Products').limit(1).where('title','==',name).get();\n  \n  const doc=snapshot.docs[0];\n  doc.ref.delete();\n  return doc.id;\n}\n       \n\n\n\n\n\n\n\n    return (\n     \n        <div className='product'>\n         \n            <div className='product-img'>\n                <img src={individualChangeProduct.url} alt=\"product-img\" />\n             \n            </div>\n            <div>\n            <form onSubmit={handleFireBaseUpload}>\n        <input \n          type=\"file\"\n          onChange={handleImageAsFile}\n        />         <button>upload to firebase</button>       </form> \n        <img src={imageAsUrl.imgUrl} alt=\"image tag\" />\n    </div>\n            <div className='product-text title'>{individualChangeProduct.title}</div>\n         \n            <div className='product-text description'>{individualChangeProduct.description}</div>\n            <div className='product-text price'>$ {individualChangeProduct.price}</div>\n            <div className='btn btn-danger btn-md cart-btn' onClick={()=>deletePost(individualChangeProduct.title)}>Delete</div>\n            <div className='btn btn-danger btn-md cart-btn' type='submit' onClick={()=>funcUpdate()} >Change</div>\n        </div>\n        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}