{"ast":null,"code":"import React, { Component } from 'react';\nimport { firestore, auth } from '../index';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [Products, setProducts] = useState([]); //getting products\n\nconst getProducts = async () => {\n  const products = await firestore.collection('Products').get();\n  const productsArray = [];\n\n  for (let snap of products.docs) {\n    let data = snap.data();\n    data.ID = snap.id;\n    productsArray.push({ ...data\n    });\n\n    if (productsArray.length === Products.docs.length) {\n      setProducts(productsArray);\n    }\n  }\n};\n\nuseEffect(() => {\n  getProducts();\n}, []);\n\nconst Cart = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/dmitriy/Desktop/test_project/src/components/Cart.js"],"names":["React","Component","firestore","auth","Products","setProducts","useState","getProducts","products","collection","get","productsArray","snap","docs","data","ID","id","push","length","useEffect","Cart"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAmBC,IAAnB,QAA+B,UAA/B;;;AAEA,MAAK,CAACC,QAAD,EAAUC,WAAV,IAAuBC,QAAQ,CAAC,EAAD,CAApC,C,CAEA;;AACA,MAAMC,WAAW,GAAE,YAAS;AACxB,QAAMC,QAAQ,GAAC,MAAMN,SAAS,CAACO,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,EAArB;AACA,QAAMC,aAAa,GAAC,EAApB;;AACA,OAAI,IAAIC,IAAR,IAAgBJ,QAAQ,CAACK,IAAzB,EAA8B;AAC1B,QAAIC,IAAI,GAACF,IAAI,CAACE,IAAL,EAAT;AACAA,IAAAA,IAAI,CAACC,EAAL,GAAQH,IAAI,CAACI,EAAb;AACAL,IAAAA,aAAa,CAACM,IAAd,CAAmB,EACf,GAAGH;AADY,KAAnB;;AAGA,QAAGH,aAAa,CAACO,MAAd,KAAuBd,QAAQ,CAACS,IAAT,CAAcK,MAAxC,EAA+C;AAC3Cb,MAAAA,WAAW,CAACM,aAAD,CAAX;AACH;AACJ;AACJ,CAbD;;AAcAQ,SAAS,CAAC,MAAM;AACdZ,EAAAA,WAAW;AAEZ,CAHQ,EAGP,EAHO,CAAT;;AAIA,MAAMa,IAAI,GAAC,MAAI;AACX,sBACC,qCADD;AAKH,CAND;;KAAMA,I;AAON,eAAeA,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport { firestore,auth } from '../index';\n\nconst[Products,setProducts]=useState([]);\n\n//getting products\nconst getProducts =async()=>{\n    const products=await firestore.collection('Products').get();\n    const productsArray=[]\n    for(let snap of products.docs){\n        let data=snap.data();\n        data.ID=snap.id;\n        productsArray.push({\n            ...data\n        })\n        if(productsArray.length===Products.docs.length){\n            setProducts(productsArray);\n        }\n    }\n}\nuseEffect(() => {\n  getProducts();\n    \n},[])\nconst Cart=()=>{\n    return(\n     <>\n     \n     </>\n    );\n};\nexport default Cart;"]},"metadata":{},"sourceType":"module"}