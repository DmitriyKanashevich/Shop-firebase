{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriy/Desktop/test_project/src/components/IndividualChangeProducts.js\";\nimport React from 'react';\nimport { firestore, storage } from '../index';\nimport { Products } from './Products';\nimport ChangeCart from './ChangeCart';\nimport { data } from './ChangeCart';\nimport firebase from 'firebase';\nimport { useState } from 'react';\nimport { InputGroup } from 'react-bootstrap';\nimport { form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const IndividualChangeProduct = ({\n  individualChangeProduct\n}) => {\n  const funcUpdate = () => {\n    return (// firestore.collection(\"Products\").get().then((querySnapshot) => {\n      // querySnapshot.forEach((doc) => {\n      //  const title={individualChangeProduct.ID}\n      //  const docid=doc.id\n      //  console.log(`${docid}=> ${(title)}`);\n      firestore.collection(\"Products\").doc(individualChangeProduct.ID).update({\n        \"title\": 'confirm={}',\n        \"description\": \"fdsvdssdvs\"\n      }).then(() => {\n        console.log(\"Document successfully updated!\");\n      })\n    );\n  }; //  })}))}\n\n\n  const deletePost = async name => {\n    const snapshot = await firestore.collection('Products').limit(1).where('title', '==', name).get();\n    const doc = snapshot.docs[0];\n    doc.ref.delete();\n    return doc.id;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-img\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: individualChangeProduct.url,\n        alt: \"product-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-text title\",\n      children: individualChangeProduct.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n        id: \"inputGroup-sizing-lg\",\n        children: \"Large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        \"aria-label\": \"Large\",\n        \"aria-describedby\": \"inputGroup-sizing-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-text description\",\n      children: individualChangeProduct.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-text price\",\n      children: [\"$ \", individualChangeProduct.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-danger btn-md cart-btn\",\n      onClick: () => deletePost(individualChangeProduct.title),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-danger btn-md cart-btn\",\n      onClick: () => funcUpdate(),\n      children: \"Change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_c = IndividualChangeProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndividualChangeProduct\");","map":{"version":3,"sources":["/Users/dmitriy/Desktop/test_project/src/components/IndividualChangeProducts.js"],"names":["React","firestore","storage","Products","ChangeCart","data","firebase","useState","InputGroup","form","IndividualChangeProduct","individualChangeProduct","funcUpdate","collection","doc","ID","update","then","console","log","deletePost","name","snapshot","limit","where","get","docs","ref","delete","id","url","title","description","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,UAAnC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,IAAT,QAAqB,iBAArB;;AACA,OAAO,MAAMC,uBAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiC;AAGrE,QAAMC,UAAU,GAAC,MAAI;AACjB,WACG;AACH;AACL;AACA;AAEQ;AACEX,MAAAA,SAAS,CAACY,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,CAAqCH,uBAAuB,CAACI,EAA7D,EAAiEC,MAAjE,CAAwE;AACpE,iBAAS,YAD2D;AAEpE,uBAAe;AAFqD,OAAxE,EAICC,IAJD,CAIM,MAAM;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACJ,OANA;AAPL;AAaQ,GAdZ,CAHqE,CAkBtE;;;AAKF,QAAMC,UAAU,GAAC,MAAMC,IAAN,IAAc;AAC7B,UAAMC,QAAQ,GAAG,MAAMrB,SAAS,CAACY,UAAV,CAAqB,UAArB,EAAiCU,KAAjC,CAAuC,CAAvC,EAA0CC,KAA1C,CAAgD,OAAhD,EAAwD,IAAxD,EAA6DH,IAA7D,EAAmEI,GAAnE,EAAvB;AAEA,UAAMX,GAAG,GAACQ,QAAQ,CAACI,IAAT,CAAc,CAAd,CAAV;AACAZ,IAAAA,GAAG,CAACa,GAAJ,CAAQC,MAAR;AACA,WAAOd,GAAG,CAACe,EAAX;AACD,GAND;;AAUI,sBAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAK,QAAA,GAAG,EAAElB,uBAAuB,CAACmB,GAAlC;AAAuC,QAAA,GAAG,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBAAqCnB,uBAAuB,CAACoB;AAA7D;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,IAAjB;AAAA,8BACR,QAAC,UAAD,CAAY,IAAZ;AAAiB,QAAA,EAAE,EAAC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,eAER,QAAC,WAAD;AAAa,sBAAW,OAAxB;AAAgC,4BAAiB;AAAjD;AAAA;AAAA;AAAA;AAAA,cAFQ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAYI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,gBAA2CpB,uBAAuB,CAACqB;AAAnE;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,uBAAuCrB,uBAAuB,CAACsB,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAcI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAgD,MAAA,OAAO,EAAE,MAAIb,UAAU,CAACT,uBAAuB,CAACoB,KAAzB,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ,eAeI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAgD,MAAA,OAAO,EAAE,MAAInB,UAAU,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAqBH,CAtDM;KAAMF,uB","sourcesContent":["import React from 'react'\nimport { firestore, storage } from '../index'\nimport { Products } from './Products'\nimport ChangeCart from './ChangeCart'\nimport {data} from './ChangeCart'\nimport firebase from 'firebase'\nimport { useState } from 'react'\nimport { InputGroup } from 'react-bootstrap'\nimport { form } from 'react-bootstrap'\nexport const IndividualChangeProduct = ({ individualChangeProduct }) => {\n    \n\n   const funcUpdate=()=>{\n       return( \n          // firestore.collection(\"Products\").get().then((querySnapshot) => {\n       // querySnapshot.forEach((doc) => {\n  //  const title={individualChangeProduct.ID}\n  //  const docid=doc.id\n \n          //  console.log(`${docid}=> ${(title)}`);\n            firestore.collection(\"Products\").doc(individualChangeProduct.ID).update({\n                \"title\": 'confirm={}',\n                \"description\": \"fdsvdssdvs\"\n            })\n            .then(() => {\n                console.log(\"Document successfully updated!\");\n           }))}\n  //  })}))}\n    \n    \n            \n\nconst deletePost=async(name) =>{\n  const snapshot=  await firestore.collection('Products').limit(1).where('title','==',name).get();\n\n  const doc=snapshot.docs[0];\n  doc.ref.delete();\n  return doc.id;\n}\n\n\n\n    return (\n     \n        <div className='product'>\n         \n            <div className='product-img'>\n                <img src={individualChangeProduct.url} alt=\"product-img\" />\n             \n            </div>\n      \n            <div className='product-text title'>{individualChangeProduct.title}</div>\n            <InputGroup size=\"lg\">\n    <InputGroup.Text id=\"inputGroup-sizing-lg\">Large</InputGroup.Text>\n    <FormControl aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" />\n  </InputGroup>\n            <div className='product-text description'>{individualChangeProduct.description}</div>\n            <div className='product-text price'>$ {individualChangeProduct.price}</div>\n            <div className='btn btn-danger btn-md cart-btn' onClick={()=>deletePost(individualChangeProduct.title)}>Delete</div>\n            <div className='btn btn-danger btn-md cart-btn' onClick={()=>funcUpdate()} >Change</div>\n        </div>\n        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}