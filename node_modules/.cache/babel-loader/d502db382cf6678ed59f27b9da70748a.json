{"ast":null,"code":"var _jsxFileName = \"/Users/dmitriy/Desktop/test_project/src/components/IndividualChangeProducts.js\";\nimport React from 'react';\nimport { firestore, storage } from '../index';\nimport { Products } from './Products';\nimport ChangeCart from './ChangeCart';\nimport { data } from './ChangeCart';\nimport firebase from 'firebase';\nimport { useState } from 'react';\nimport { InputGroup } from 'react-bootstrap';\nimport { FormControl } from 'react-bootstrap';\nimport { title } from 'process';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const IndividualChangeProduct = ({\n  individualChangeProduct\n}) => {\n  var _s = $RefreshSig$();\n\n  const funcUpdate = () => {\n    _s();\n\n    // var myValue = document.getElementById(\"inputGroup-sizing-lg\").value={title};\n    const inpu = document.getElementById(\"example\").value;\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState('');\n    const [sell, setSell] = useState('');\n    const [date, setDate] = useState('');\n    const [image, setImage] = useState(null);\n    const [imageError, setImageError] = useState('');\n    const types = ['image/jpg', 'image/jpeg', 'image/png', 'image/PNG'];\n\n    const handleProductImg = e => {\n      let selectedFile = e.target.files[0];\n\n      if (selectedFile) {\n        if (selectedFile && types.includes(selectedFile.type)) {\n          setImage(selectedFile);\n          setImageError('');\n        }\n      }\n    };\n\n    const handleAddProducts = e => {\n      e.preventDefault();\n      const uploadTask = storage.ref(`product-images/${image.name}`).put(image);\n      uploadTask.on('state_changed', snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log(progress);\n      }, error => setUploadError(error.message), () => {\n        storage.ref('product-images').child(image.name).getDownloadURL().then(url => {\n          firestore.collection('Products').add({\n            title,\n            description,\n            price: Number(price),\n            sell: Number(sell),\n            date: Number(date),\n            url\n          }).then(() => {\n            setSuccessMsg('Товар добавлен');\n            setTitle('');\n            setDescription('');\n            setPrice('');\n            setSell('');\n            setDate('');\n            document.getElementById('file').value = '';\n            setImageError('');\n            setUploadError('');\n            setTimeout(() => {\n              setSuccessMsg('');\n            }, 3000);\n          }).catch(error => setUploadError(error.message));\n        });\n      });\n    };\n\n    return firestore.collection(\"Products\").doc(individualChangeProduct.ID).update({\n      \"title\": inpu,\n      \"description\": \"fdsvdssdvs\"\n    }).then(() => {\n      console.log(\"Document successfully updated!\");\n    });\n  };\n\n  _s(funcUpdate, \"UvyUgGUPp6TosyLHsJ6/geqstv4=\");\n\n  const deletePost = async name => {\n    const snapshot = await firestore.collection('Products').limit(1).where('title', '==', name).get();\n    const doc = snapshot.docs[0];\n    doc.ref.delete();\n    return doc.id;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-img\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: individualChangeProduct.url,\n        alt: \"product-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      className: \"form-control\",\n      required: true,\n      onChange: handleProductImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-text title\",\n      children: individualChangeProduct.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-text description\",\n      children: individualChangeProduct.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-text price\",\n      children: [\"$ \", individualChangeProduct.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-danger btn-md cart-btn\",\n      onClick: () => deletePost(individualChangeProduct.title),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-danger btn-md cart-btn\",\n      onClick: () => funcUpdate(),\n      children: \"Change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_c = IndividualChangeProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndividualChangeProduct\");","map":{"version":3,"sources":["/Users/dmitriy/Desktop/test_project/src/components/IndividualChangeProducts.js"],"names":["React","firestore","storage","Products","ChangeCart","data","firebase","useState","InputGroup","FormControl","title","IndividualChangeProduct","individualChangeProduct","funcUpdate","inpu","document","getElementById","value","setTitle","description","setDescription","price","setPrice","sell","setSell","date","setDate","image","setImage","imageError","setImageError","types","handleProductImg","e","selectedFile","target","files","includes","type","handleAddProducts","preventDefault","uploadTask","ref","name","put","on","snapshot","progress","bytesTransferred","totalBytes","console","log","error","setUploadError","message","child","getDownloadURL","then","url","collection","add","Number","setSuccessMsg","setTimeout","catch","doc","ID","update","deletePost","limit","where","get","docs","delete","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { firestore, storage } from '../index'\nimport { Products } from './Products'\nimport ChangeCart from './ChangeCart'\nimport {data} from './ChangeCart'\nimport firebase from 'firebase'\nimport { useState } from 'react'\nimport { InputGroup } from 'react-bootstrap'\nimport { FormControl } from 'react-bootstrap'\nimport { title } from 'process'\nexport const IndividualChangeProduct = ({ individualChangeProduct }) => {\n    \n\n   const funcUpdate=()=>{\n   // var myValue = document.getElementById(\"inputGroup-sizing-lg\").value={title};\n    const inpu= document.getElementById(\"example\").value;\n\n\n\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState('');\n    const [sell, setSell] = useState('');\n    const [date, setDate] = useState('');\n    const [image, setImage] = useState(null);\n\n    const [imageError, setImageError] = useState('');\n\n    const types = ['image/jpg', 'image/jpeg', 'image/png', 'image/PNG'];\n    const handleProductImg = (e) => {\n        let selectedFile = e.target.files[0];\n        if (selectedFile) {\n            if (selectedFile && types.includes(selectedFile.type)) {\n                setImage(selectedFile);\n                setImageError('');\n            }\n            \n        }\n        \n    }\n    const handleAddProducts=(e)=>{\n        e.preventDefault();\n       const uploadTask=storage.ref(`product-images/${image.name}`).put(image);\n       uploadTask.on('state_changed',snapshot=>{\n           const progress=(snapshot.bytesTransferred/snapshot.totalBytes)*100\n           console.log(progress);\n       },error=>setUploadError(error.message),()=>{\n           storage.ref('product-images').child(image.name).getDownloadURL().then(url=>{\n            firestore.collection('Products').add({\n                title,\n                description,\n                price:Number(price),\n                sell:Number(sell),\n                date:Number(date),\n                url\n            }).then(()=>{\n                setSuccessMsg('Товар добавлен');\n                setTitle('');\n                setDescription('');\n                setPrice('');\n                setSell('');\n                setDate('');\n                document.getElementById('file').value='';\n                setImageError('');\n                setUploadError('');\n                setTimeout(()=>{\nsetSuccessMsg('');\n                },3000)\n            }).catch(error=>setUploadError(error.message));\n           })\n       })\n    }\n\n\n\n    \n       return( \n     \n            firestore.collection(\"Products\").doc(individualChangeProduct.ID).update({\n                \"title\": inpu,\n                \"description\": \"fdsvdssdvs\"\n            })\n            .then(() => {\n                console.log(\"Document successfully updated!\");\n           }))}\n\nconst deletePost=async(name) =>{\n  const snapshot=  await firestore.collection('Products').limit(1).where('title','==',name).get();\n  \n  const doc=snapshot.docs[0];\n  doc.ref.delete();\n  return doc.id;\n}\n\n\n\n    return (\n     \n        <div className='product'>\n         \n            <div className='product-img'>\n                <img src={individualChangeProduct.url} alt=\"product-img\" />\n             \n            </div>\n            <input type='file' id='file' className='form-control' required\n                    onChange={handleProductImg} ></input>\n            <div className='product-text title'>{individualChangeProduct.title}</div>\n         \n            <div className='product-text description'>{individualChangeProduct.description}</div>\n            <div className='product-text price'>$ {individualChangeProduct.price}</div>\n            <div className='btn btn-danger btn-md cart-btn' onClick={()=>deletePost(individualChangeProduct.title)}>Delete</div>\n            <div className='btn btn-danger btn-md cart-btn' onClick={()=>funcUpdate()} >Change</div>\n        </div>\n        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}